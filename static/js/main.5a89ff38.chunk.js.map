{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["image_fromats","App","useState","image1","setImage1","image2","setImage2","delta","setDelta","showMatch","setShowMatch","showMatchAllColors","setShowMatchAllColors","showImage1","setShowImage1","showImage2","setShowImage2","isResultDrawed","setIsResultDrawedd","inputFile1","useRef","inputFile2","pixelInfo","setPixelInfo","imageFormat","setImageFormat","useEffect","console","log","document","getElementById","style","display","addEventListener","onMouseMove","e","canvas","pos","getPosition","x","pageX","y","pageY","p","getContext","getImageData","data","rgba1","rgba2","onControllersChange","val","id","onFileInputChange","canvasId","img","Image","src","URL","createObjectURL","target","files","onload","onDraw","ctx","width","height","drawImage","obj","curleft","curtop","offsetParent","offsetLeft","offsetTop","size","title","margin","className","type","onChange","ref","Text","fontWeight","FileImageTwoTone","fontSize","onClick","current","click","icon","UploadOutlined","disabled","marginLeft","marginRight","defaultValue","map","format","value","link","createElement","download","href","toDataURL","marginTop","toFixed","textAlign","step","min","max","onAfterChange","checked","canvas1","rgbArray1","canvas2","rgbArray2","length","rgbData","Uint8ClampedArray","i","rValueDiff","canvas3","ctx3","clearRect","imageData","ImageData","putImageData","EditOutlined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5a89ff38.chunk.js","sourcesContent":["/* eslint-disable */\nimport './App.css';\nimport { useEffect, useState, useRef } from 'react';\nimport { Button, Switch, Typography, Select, Checkbox, Divider } from 'antd';\nimport { FileImageTwoTone, UploadOutlined, EditOutlined } from '@ant-design/icons';\nimport { Slider, Card } from 'antd';\nimport { Option } from 'antd/lib/mentions';\n\nconst image_fromats = [\n  'jpg',\n  'jpeg',\n  'png',\n  'bmp',\n];\n\nfunction App() {\n  const [image1, setImage1] = useState(null);\n  const [image2, setImage2] = useState(null);\n  const [delta, setDelta] = useState(20);\n  const [showMatch, setShowMatch] = useState(true);\n  const [showMatchAllColors, setShowMatchAllColors] = useState(false);\n  const [showImage1, setShowImage1] = useState(false);\n  const [showImage2, setShowImage2] = useState(false);\n  const [isResultDrawed, setIsResultDrawedd] = useState(false);\n  const inputFile1 = useRef(null);\n  const inputFile2 = useRef(null);\n  const [pixelInfo, setPixelInfo] = useState({});\n  const [imageFormat, setImageFormat] = useState('jpg');\n  useEffect(() => {\n    console.log('mount');\n    document.getElementById('canvas1').style.display = 'none';\n    document.getElementById('canvas2').style.display = 'none';\n    document.getElementById('canvas3').style.display = 'none';\n    document.getElementById('canvas3').addEventListener('mousemove', onMouseMove);\n\n    return () => {\n\n    };\n  }, []);\n\n  const onMouseMove = (e) => {\n    const canvas = document.getElementById('canvas3');\n    var pos = getPosition(document.getElementById('canvas3'));\n    var x = e.pageX - pos.x;\n    var y = e.pageY - pos.y;\n    var c = canvas.getContext('2d');\n    var p = c.getImageData(x, y, 1, 1).data;\n\n    const rgba1 = document.getElementById('canvas1').getContext('2d')?.getImageData(x, y, 1, 1)?.data;\n    const rgba2 = document.getElementById('canvas2').getContext('2d')?.getImageData(x, y, 1, 1)?.data;\n    const info = {\n      x,\n      y,\n      p,\n      rgba1,\n      rgba2,\n    };\n\n    setPixelInfo(info);\n  }\n\n  const onControllersChange = (val, id) => {\n    setShowMatch(false);\n    setShowMatchAllColors(false);\n    setShowImage1(false);\n    setShowImage2(false);\n\n    if (id === 'match') {\n      setShowMatch(val);\n    }\n\n    if (id === 'matchAll') {\n      setShowMatchAllColors(val);\n    }\n\n    if (id === 'image1') {\n      setShowImage1(val);\n    }\n\n    if (id === 'image2') {\n      setShowImage2(val);\n    }\n  }\n\n  const onFileInputChange = (e, canvasId) => {\n    var img = new Image();\n    img.src = URL.createObjectURL(e.target.files[0]);\n    document.getElementById(canvasId).style.display = 'block';\n    img.onload = () => onDraw(img, canvasId);\n\n    if (canvasId === 'canvas1') {\n      setImage1(img);\n    } else {\n      setImage2(img);\n    }\n    console.log(e.target.files[0]);\n  }\n\n  const onDraw = (img, canvasId) => {\n    var canvas = document.getElementById(canvasId);\n    var ctx = canvas.getContext('2d');\n\n    var MAX_WIDTH = 400;\n    var MAX_HEIGHT = 400;\n    var width = img.width;\n    var height = img.height;\n\n    // Add the resizing logic\n    if (width > height) {\n      if (width > MAX_WIDTH) {\n        height *= MAX_WIDTH / width;\n        width = MAX_WIDTH;\n      }\n    } else {\n      if (height > MAX_HEIGHT) {\n        width *= MAX_HEIGHT / height;\n        height = MAX_HEIGHT;\n      }\n    }\n\n    canvas.width = width;\n    canvas.height = height;\n    ctx.drawImage(img, 0, 0, width, height);\n  }\n\n  const drawResult = () => {\n    const canvas1 = document.getElementById('canvas1');\n    const ctx1 = canvas1.getContext('2d');\n    const rgbArray1 = ctx1.getImageData(0, 0, canvas1.width, canvas1.height).data;\n    console.log(rgbArray1);\n\n    const canvas2 = document.getElementById('canvas2');\n    const ctx2 = canvas2.getContext('2d');\n    const rgbArray2 = ctx2.getImageData(0, 0, canvas2.width, canvas2.height).data;\n    console.log(rgbArray2);\n\n    const height = canvas1.height > canvas2.height ? canvas1.height : canvas2.height;\n    const width = canvas1.width > canvas2.width ? canvas1.width : canvas2.width;\n    const length = rgbArray1.length > rgbArray2.length ? rgbArray1.length : rgbArray2.length;\n\n    const rgbData = new Uint8ClampedArray(height * width * 4);\n\n    for (let i = 0; i < length; i += 4) {\n      const rValueDiff = rgbArray1[i] > rgbArray2[i] ? rgbArray1[i] - rgbArray2[i] : rgbArray2[i] - rgbArray1[i];\n\n      if (showMatch) {\n        if (rValueDiff <= delta) {\n          rgbData[i] = (rgbArray1[i] + rgbArray2[i]) / 2;\n        } else {\n          rgbData[i] = 0;\n        }\n        rgbData[i + 1] = 0;\n        rgbData[i + 2] = 0;\n        rgbData[i + 3] = 255;\n      }\n\n      if (showMatchAllColors) {\n        if (rValueDiff <= delta) {\n          rgbData[i] = (rgbArray1[i] + rgbArray2[i]) / 2;\n          rgbData[i + 1] = (rgbArray1[i + 1] + rgbArray2[i + 1]) / 2;\n          rgbData[i + 2] = (rgbArray1[i + 2] + rgbArray2[i + 2]) / 2;\n          rgbData[i + 3] = (rgbArray1[i + 3] + rgbArray2[i + 3]) / 2;\n        } else {\n          rgbData[i] = 0;\n          rgbData[i + 1] = 0;\n          rgbData[i + 2] = 0;\n          rgbData[i + 3] = 255;\n\n        }\n      }\n\n      if (showImage1) {\n        if (rValueDiff <= delta) {\n          rgbData[i] = rgbArray1[i];\n          rgbData[i + 1] = rgbArray1[i + 1];\n          rgbData[i + 2] = rgbArray1[i + 2];\n          rgbData[i + 3] = rgbArray1[i + 3];\n        }\n      }\n\n      if (showImage2) {\n        if (rValueDiff <= delta) {\n          rgbData[i] = rgbArray2[i];\n          rgbData[i + 1] = rgbArray2[i + 1];\n          rgbData[i + 2] = rgbArray2[i + 2];\n          rgbData[i + 3] = rgbArray2[i + 3];\n        }\n      }\n    }\n    setIsResultDrawedd(true);\n    document.getElementById('canvas3').style.display = 'block';\n    const canvas3 = document.getElementById('canvas3');\n    canvas3.height = height;\n    canvas3.width = width;\n    const ctx3 = canvas3.getContext('2d');\n    ctx3.clearRect(0, 0, canvas3.width, canvas3.height);\n    const imageData = new ImageData(rgbData, width, height);\n    ctx3.putImageData(imageData, 0, 0)\n  }\n\n  const download = () => {\n    const link = document.createElement('a');\n    link.download = `result_image.${imageFormat}`;\n    link.href = document.getElementById('canvas3').toDataURL()\n    link.click();\n  }\n\n  const getPosition = (obj) => {\n    var curleft = 0, curtop = 0;\n    if (obj.offsetParent) {\n      do {\n        curleft += obj.offsetLeft;\n        curtop += obj.offsetTop;\n      } while (obj = obj.offsetParent);\n      return { x: curleft, y: curtop };\n    }\n    return undefined;\n  }\n\n  return (\n    <div>\n      <Card size=\"small\" title=\"Інструкція до виконання\" style={{ width: '80%', margin: '25px auto' }}>\n        <div className={'instr-block'}>\n          1. Завантажте \"Зображення 1\" та \"Зображення 2\" у якості джерела даних для знаходження спільних пікселів по значенню R (за RGB) із відхиленням \"Дельта\".\n        </div>\n        <div className={'instr-block'}>\n          2. Оберіть налаштування виводу результату. Доступні опції дозволяють змінити значення \"Дельта\", показати збіг двох зображень по R згідно \"Дельта\", та показати точки із 1 та 2 зображень, які задовольняють умову збігу.\n        </div>\n        <div className={'instr-block'}>\n          3. Натисніть кнопку \"Намалювати\".\n        </div>\n        <div className={'instr-block'}>\n          4. Для перегляду значення пікселя результуючого зображення наведіть мишкою на цей піксель.\n        </div>\n        <div className={'instr-block'}>\n          5. Для завантаження зображення оберіть бажаний тип файлу та натисніть \"Завантажити\"\n        </div>\n      </Card>\n      <div className=\"cols\">\n        <div className={'col'}>\n          <input\n            type='file'\n            onChange={(e) => onFileInputChange(e, 'canvas1')}\n            style={{ display: 'none' }}\n            ref={inputFile1}\n          />\n          <Typography.Text style={{ margin: '10px', fontWeight: '500' }}>\n            Зображення 1\n          </Typography.Text>\n          <div className={'canvas-wrapper'}>\n            {!image1 && (\n              <div className={'no-image'}>\n                <FileImageTwoTone style={{ fontSize: '50px' }} />\n                <span className={'no-image-text'}>\n                  Завантажте зображення 1 за допомогою кнопки нижче\n              </span>\n              </div>\n            )}\n            <canvas id={'canvas1'} />\n          </div>\n          <div className={'btn-wrapper'}>\n            <Button\n              onClick={() => inputFile1.current.click()}\n              type=\"primary\"\n              icon={<UploadOutlined />}\n              className={'upload-button'}\n            >\n              {'Завантажити зображення 1'}\n            </Button>\n          </div>\n        </div>\n\n        <div className={'col'}>\n          <input\n            type='file'\n            onChange={(e) => onFileInputChange(e, 'canvas2')}\n            style={{ display: 'none' }}\n            ref={inputFile2}\n          />\n          <Typography.Text style={{ margin: '10px', fontWeight: '500' }}>\n            Зображення 2\n          </Typography.Text>\n          <div className={'canvas-wrapper'}>\n            {!image2 && (\n              <div className={'no-image'}>\n                <FileImageTwoTone style={{ fontSize: '50px' }} />\n                <span className={'no-image-text'}>\n                  Завантажте зображення 2 за допомогою кнопки нижче\n              </span>\n              </div>\n            )}\n            <canvas id={'canvas2'} />\n          </div>\n          <div className={'btn-wrapper'}>\n            <Button\n              onClick={() => inputFile2.current.click()}\n              type=\"primary\"\n              icon={<UploadOutlined />}\n              className={'upload-button'}\n            >\n              {'Завантажити зображення 2'}\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      <div className={'result-zone'}>\n        <div>\n          <div className={'canvas-wrapper'}>\n            {!isResultDrawed && (\n              <div className={'no-image'}>\n                <FileImageTwoTone style={{ fontSize: '50px' }} />\n                <span className={'no-image-text'}>\n                  Завантажте два зображення вище та натисніть кнопку \"Намалювати\" для генерації результуючого зображення\n              </span>\n              </div>\n            )}\n            <canvas id={'canvas3'} />\n            <div>\n            </div>\n          </div>\n\n          <div className={'saveas'}>\n            <span>\n              Формат:\n            </span>\n            <Select disabled={!isResultDrawed} style={{ width: '100px', marginLeft: '10px', marginRight: '10px' }} defaultValue={imageFormat} onChange={setImageFormat}>\n              {image_fromats.map((format) => (\n                <Option value={format}>{format}</Option>\n              ))}\n            </Select>\n            <Button type='primary' onClick={download} disabled={!isResultDrawed}>\n              {'Зберегти'}\n            </Button>\n          </div>\n\n          <div style={{ marginTop: '20px', height: '150px', width: '400px' }}>\n            <Card style={{ height: '150px' }}>\n              {!pixelInfo.x && (\n                <div className={'no-image'}>\n                  <FileImageTwoTone style={{ fontSize: '50px' }} />\n                  <span className={'no-image-text'}>\n                    Тут відображатимуться дані про піксель після генерації результуючого зображення\n                  </span>\n                </div>\n              )}\n\n              {pixelInfo.x && (\n                <div className={'pixel-info'}>\n                  <div>\n                    x = {pixelInfo.x}, y = {pixelInfo.y}, delta = {delta}\n                  </div>\n                  <div>\n                    RGBA Результуючого = [{pixelInfo.p[0]}, {pixelInfo.p[1]}, {pixelInfo.p[2]}, {(pixelInfo.p[3] / 255).toFixed(2)}]\n                </div>\n                  <div>\n                    RGBA Зображення 1 = [{pixelInfo.rgba1[0]}, {pixelInfo.rgba1[1]}, {pixelInfo.rgba1[2]}, {(pixelInfo.rgba1[3] / 255).toFixed(2)}]\n                </div>\n                  <div>\n                    RGBA Зображення 2 = [{pixelInfo.rgba2[0]}, {pixelInfo.rgba2[1]}, {pixelInfo.rgba2[2]}, {(pixelInfo.rgba2[3] / 255).toFixed(2)}]\n                </div>\n                </div>\n              )}\n            </Card>\n          </div>\n        </div>\n\n        <Card style={{ height: '400px' }}>\n          <div className={'controllers'}>\n            <div style={{ textAlign: 'center' }}>\n              Дельта значення для R (по RGB):\n            <div className={'slider-wrp'}>\n                <span>0</span>\n                <Slider\n                  step={1}\n                  min={0}\n                  max={255}\n                  defaultValue={delta}\n                  onAfterChange={setDelta}\n                  style={{ width: '300px' }}\n                // tooltipVisible\n                />\n                <span>255</span>\n              </div>\n            </div>\n            <Divider style={{ margin: '10px 0px 0px' }} />\n            <div className={'switch-wrapper'}>\n              <Switch checked={showMatch} onChange={(val) => onControllersChange(val, 'match')} />\n              <span className={'switch-label'}>\n                Показати збіг обох по R (результат - середня R, G = 0, B = 0)\n              </span>\n            </div>\n\n            <div className={'switch-wrapper'}>\n              <Switch checked={showMatchAllColors} onChange={(val) => onControllersChange(val, 'matchAll')} />\n              <span className={'switch-label'}>\n                Показати збіг обох по R (результат - середня R, G, B)\n              </span>\n            </div>\n\n            <div className={'switch-wrapper'}>\n              <Switch checked={showImage1} onChange={(val) => onControllersChange(val, 'image1')} />\n              <span className={'switch-label'}>\n                Показати точки збігу зображення 1\n              </span>\n            </div>\n\n            <div className={'switch-wrapper'}>\n              <Switch checked={showImage2} onChange={(val) => onControllersChange(val, 'image2')} />\n              <span className={'switch-label'}>\n                Показати точки збігу зображення 2\n              </span>\n            </div>\n            <Button\n              type=\"primary\"\n              className={'drawBtn'}\n              onClick={drawResult}\n              disabled={!(image1 && image2)}\n              icon={<EditOutlined />}\n            >\n              {'Намалювати'}\n            </Button>\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}