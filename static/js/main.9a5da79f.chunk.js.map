{"version":3,"sources":["App.js","index.js"],"names":["image_fromats","App","useState","image1","setImage1","image2","setImage2","delta","setDelta","isResultDrawed","setIsResultDrawedd","inputFile1","useRef","inputFile2","pixelInfo","setPixelInfo","imageFormat","setImageFormat","useEffect","document","getElementById","style","display","addEventListener","onMouseMove","removeEventListener","e","canvas","pos","getPosition","x","pageX","y","pageY","p","getContext","getImageData","data","rgba1","rgba2","onFileInputChange","canvasId","img","Image","src","URL","createObjectURL","target","files","onload","onDraw","ctx","width","height","drawImage","obj","curleft","curtop","offsetParent","offsetLeft","offsetTop","size","title","margin","className","type","onChange","ref","Text","fontWeight","FileImageTwoTone","fontSize","id","onClick","current","click","icon","UploadOutlined","disabled","marginLeft","marginRight","defaultValue","map","format","value","link","createElement","download","href","toDataURL","textAlign","marginTop","step","min","max","onAfterChange","canvas1","ctx1","canvas2","ctx2","img1","img2","canvas3","ctx3","diff","createImageData","console","log","Pixelmatch","threshold","putImageData","EditOutlined","toFixed","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9a5da79f.chunk.js","sourcesContent":["/* eslint-disable */\nimport './App.css';\nimport { useEffect, useState, useRef } from 'react';\nimport { Button, Switch, Typography, Select, Divider, Slider, Card } from 'antd';\nimport { FileImageTwoTone, UploadOutlined, EditOutlined } from '@ant-design/icons';\nimport { Option } from 'antd/lib/mentions';\nimport Pixelmatch from 'pixelmatch';\n\nconst image_fromats = [\n  'jpg',\n  'jpeg',\n  'png',\n  'bmp',\n];\n\nfunction App() {\n  const [image1, setImage1] = useState(null);\n  const [image2, setImage2] = useState(null);\n  const [delta, setDelta] = useState(20);\n  const [showMatch, setShowMatch] = useState(true);\n  const [showMatchAllColors, setShowMatchAllColors] = useState(false);\n  const [showImage1, setShowImage1] = useState(false);\n  const [showImage2, setShowImage2] = useState(false);\n  const [isResultDrawed, setIsResultDrawedd] = useState(false);\n  const inputFile1 = useRef(null);\n  const inputFile2 = useRef(null);\n  const [pixelInfo, setPixelInfo] = useState({});\n  const [imageFormat, setImageFormat] = useState('jpg');\n\n  useEffect(() => {\n    document.getElementById('canvas1').style.display = 'none';\n    document.getElementById('canvas2').style.display = 'none';\n    document.getElementById('canvas3').style.display = 'none';\n    document.getElementById('canvas3').addEventListener('mousemove', onMouseMove);\n\n    return () => {\n      document.getElementById('canvas3').removeEventListener('mousemove', onMouseMove);\n    };\n  }, []);\n\n  const onMouseMove = (e) => {\n    const canvas = document.getElementById('canvas3');\n    var pos = getPosition(document.getElementById('canvas3'));\n    var x = e.pageX - pos.x;\n    var y = e.pageY - pos.y;\n    var c = canvas.getContext('2d');\n    var p = c.getImageData(x, y, 1, 1).data;\n\n    const rgba1 = document.getElementById('canvas1').getContext('2d')?.getImageData(x, y, 1, 1)?.data;\n    const rgba2 = document.getElementById('canvas2').getContext('2d')?.getImageData(x, y, 1, 1)?.data;\n    const info = {\n      x,\n      y,\n      p,\n      rgba1,\n      rgba2,\n    };\n\n    setPixelInfo(info);\n  }\n\n  const onControllersChange = (val, id) => {\n    setShowMatch(false);\n    setShowMatchAllColors(false);\n    setShowImage1(false);\n    setShowImage2(false);\n\n    if (id === 'match') {\n      setShowMatch(val);\n    }\n\n    if (id === 'matchAll') {\n      setShowMatchAllColors(val);\n    }\n\n    if (id === 'image1') {\n      setShowImage1(val);\n    }\n\n    if (id === 'image2') {\n      setShowImage2(val);\n    }\n  }\n\n  const onFileInputChange = (e, canvasId) => {\n    var img = new Image();\n    img.src = URL.createObjectURL(e.target.files[0]);\n    document.getElementById(canvasId).style.display = 'block';\n    img.onload = () => onDraw(img, canvasId);\n\n    if (canvasId === 'canvas1') {\n      setImage1(img);\n    } else {\n      setImage2(img);\n    }\n  }\n\n  const onDraw = (img, canvasId) => {\n    var canvas = document.getElementById(canvasId);\n    var ctx = canvas.getContext('2d');\n\n    var MAX_WIDTH = 400;\n    var MAX_HEIGHT = 400;\n    var width = img.width;\n    var height = img.height;\n\n    // Add the resizing logic\n    if (width > height) {\n      if (width > MAX_WIDTH) {\n        height *= MAX_WIDTH / width;\n        width = MAX_WIDTH;\n      }\n    } else {\n      if (height > MAX_HEIGHT) {\n        width *= MAX_HEIGHT / height;\n        height = MAX_HEIGHT;\n      }\n    }\n\n    canvas.width = width;\n    canvas.height = height;\n    ctx.drawImage(img, 0, 0, width, height);\n  }\n\n  const drawResult = () => {\n    const canvas1 = document.getElementById('canvas1');\n    const ctx1 = canvas1.getContext('2d');\n\n    const canvas2 = document.getElementById('canvas2');\n    const ctx2 = canvas2.getContext('2d');\n\n    const height = canvas1.height > canvas2.height ? canvas1.height : canvas2.height;\n    const width = canvas1.width > canvas2.width ? canvas1.width : canvas2.width;\n\n    setIsResultDrawedd(true);\n    document.getElementById('canvas3').style.display = 'block';\n    const img1 = ctx1.getImageData(0, 0, width, height);\n    const img2 = ctx2.getImageData(0, 0, width, height);\n\n    const canvas3 = document.getElementById('canvas3');\n    canvas3.height = height;\n    canvas3.width = width;\n\n    const ctx3 = canvas3.getContext('2d');\n    const diff = ctx3.createImageData(width, height);\n    console.log(img1.data, img2.data);\n    Pixelmatch(img1.data, img2.data, diff.data, width, height, { threshold: delta / 255 });\n\n    ctx3.putImageData(diff, 0, 0);\n  }\n\n  const download = () => {\n    const link = document.createElement('a');\n    link.download = `result_image.${imageFormat}`;\n    link.href = document.getElementById('canvas3').toDataURL()\n    link.click();\n  }\n\n  const getPosition = (obj) => {\n    var curleft = 0, curtop = 0;\n    if (obj.offsetParent) {\n      do {\n        curleft += obj.offsetLeft;\n        curtop += obj.offsetTop;\n      } while (obj = obj.offsetParent);\n      return { x: curleft, y: curtop };\n    }\n    return undefined;\n  }\n\n  return (\n    <div>\n      <Card size=\"small\" title=\"Інструкція до виконання\" style={{ width: '80%', margin: '25px auto' }}>\n        <div className={'instr-block'}>\n          1. Завантажте \"Зображення 1\" та \"Зображення 2\" у якості джерела даних для знаходження різниці із відхиленням \"Дельта\".\n        </div>\n        <div className={'instr-block'}>\n          2. Оберіть налаштування виводу результату. Доступні опції дозволяють змінити значення \"Дельта\".\n        </div>\n        <div className={'instr-block'}>\n          3. Натисніть кнопку \"Намалювати\".\n        </div>\n        <div className={'instr-block'}>\n          4. Для перегляду значення пікселя результуючого зображення наведіть мишкою на цей піксель.\n        </div>\n        <div className={'instr-block'}>\n          5. Для завантаження зображення оберіть бажаний тип файлу та натисніть \"Завантажити\"\n        </div>\n      </Card>\n      <div className=\"cols\">\n        <div className={'col'}>\n          <input\n            type='file'\n            onChange={(e) => onFileInputChange(e, 'canvas1')}\n            style={{ display: 'none' }}\n            ref={inputFile1}\n          />\n          <Typography.Text style={{ margin: '10px', fontWeight: '500' }}>\n            Зображення 1\n          </Typography.Text>\n          <div className={'canvas-wrapper'}>\n            {!image1 && (\n              <div className={'no-image'}>\n                <FileImageTwoTone style={{ fontSize: '50px' }} />\n                <span className={'no-image-text'}>\n                  Завантажте зображення 1 за допомогою кнопки нижче\n              </span>\n              </div>\n            )}\n            <canvas id={'canvas1'} />\n          </div>\n          <div className={'btn-wrapper'}>\n            <Button\n              onClick={() => inputFile1.current.click()}\n              type=\"primary\"\n              icon={<UploadOutlined />}\n              className={'upload-button'}\n            >\n              {'Завантажити зображення 1'}\n            </Button>\n          </div>\n        </div>\n\n        <div className={'col'}>\n          <input\n            type='file'\n            onChange={(e) => onFileInputChange(e, 'canvas2')}\n            style={{ display: 'none' }}\n            ref={inputFile2}\n          />\n          <Typography.Text style={{ margin: '10px', fontWeight: '500' }}>\n            Зображення 2\n          </Typography.Text>\n          <div className={'canvas-wrapper'}>\n            {!image2 && (\n              <div className={'no-image'}>\n                <FileImageTwoTone style={{ fontSize: '50px' }} />\n                <span className={'no-image-text'}>\n                  Завантажте зображення 2 за допомогою кнопки нижче\n              </span>\n              </div>\n            )}\n            <canvas id={'canvas2'} />\n          </div>\n          <div className={'btn-wrapper'}>\n            <Button\n              onClick={() => inputFile2.current.click()}\n              type=\"primary\"\n              icon={<UploadOutlined />}\n              className={'upload-button'}\n            >\n              {'Завантажити зображення 2'}\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      <div className={'result-zone'}>\n        <div>\n          <div className={'canvas-wrapper'}>\n            {!isResultDrawed && (\n              <div className={'no-image'}>\n                <FileImageTwoTone style={{ fontSize: '50px' }} />\n                <span className={'no-image-text'}>\n                  Завантажте два зображення вище та натисніть кнопку \"Намалювати\" для генерації результуючого зображення\n              </span>\n              </div>\n            )}\n            <canvas id={'canvas3'} />\n            <div>\n            </div>\n          </div>\n\n          <div className={'saveas'}>\n            <span>\n              Формат:\n            </span>\n            <Select disabled={!isResultDrawed} style={{ width: '100px', marginLeft: '10px', marginRight: '10px' }} defaultValue={imageFormat} onChange={setImageFormat}>\n              {image_fromats.map((format) => (\n                <Option value={format}>{format}</Option>\n              ))}\n            </Select>\n            <Button type='primary' onClick={download} disabled={!isResultDrawed}>\n              {'Зберегти'}\n            </Button>\n          </div>\n\n        </div>\n\n        <Card style={{ height: '400px' }}>\n          <div className={'controllers'}>\n            <div style={{ textAlign: 'center', marginTop: '20px' }}>\n              Дельта (допустиме відхилення):\n            <div className={'slider-wrp'}>\n                <span>0</span>\n                <Slider\n                  step={1}\n                  min={0}\n                  max={100}\n                  defaultValue={delta}\n                  onAfterChange={setDelta}\n                  style={{ width: '300px' }}\n                // tooltipVisible\n                />\n                <span>100</span>\n              </div>\n            </div>\n            {/* <Divider style={{ margin: '10px 0px 0px' }} /> */}\n\n            <Button\n              type=\"primary\"\n              className={'drawBtn'}\n              onClick={drawResult}\n              disabled={!(image1 && image2)}\n              icon={<EditOutlined />}\n            >\n              {'Намалювати'}\n            </Button>\n          </div>\n\n          <div style={{ marginTop: '40px', height: '150px', width: '400px' }}>\n            <Card style={{ height: '150px' }}>\n              {!pixelInfo.x && (\n                <div className={'no-image'}>\n                  <FileImageTwoTone style={{ fontSize: '50px' }} />\n                  <span className={'no-image-text'}>\n                    Тут відображатимуться дані про піксель після генерації результуючого зображення\n                  </span>\n                </div>\n              )}\n\n              {pixelInfo.x && (\n                <div className={'pixel-info'}>\n                  <div>\n                    x = {pixelInfo.x}, y = {pixelInfo.y}, delta = {delta}\n                  </div>\n                  <div>\n                    RGBA Результуючого = [{pixelInfo.p[0]}, {pixelInfo.p[1]}, {pixelInfo.p[2]}, {(pixelInfo.p[3] / 255).toFixed(2)}]\n                </div>\n                  <div>\n                    RGBA Зображення 1 = [{pixelInfo.rgba1[0]}, {pixelInfo.rgba1[1]}, {pixelInfo.rgba1[2]}, {(pixelInfo.rgba1[3] / 255).toFixed(2)}]\n                </div>\n                  <div>\n                    RGBA Зображення 2 = [{pixelInfo.rgba2[0]}, {pixelInfo.rgba2[1]}, {pixelInfo.rgba2[2]}, {(pixelInfo.rgba2[3] / 255).toFixed(2)}]\n                </div>\n                </div>\n              )}\n            </Card>\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}